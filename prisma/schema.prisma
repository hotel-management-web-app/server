// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model RoomType {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String
  occupancy   Int
  price       Float
  amenities   String[]
  details     String[]
  rooms       Room[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Room {
  id                 Int                @id @default(autoincrement())
  roomType           RoomType           @relation(fields: [roomTypeId], references: [id])
  roomTypeId         Int
  roomNumber         Int
  floorNumber        Int
  roomStatus         RoomStatus         @default(VACANT)
  bookings           Booking[]
  housekeepingStatus HousekeepingStatus @default(CLEAN)
  priority           PriorityStatus     @default(HIGH)
  comments           String             @default("")
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt

  @@unique([roomNumber, floorNumber])
}

enum RoomStatus {
  RESERVED
  VACANT
}

enum HousekeepingStatus {
  CLEAN
  CLEANING
  DIRTY
  OUT_OF_SERVICE
}

enum PriorityStatus {
  HIGH
  MEDIUM
  LOW
}

model Guest {
  id          Int         @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String
  phoneNumber String
  status      GuestStatus @default(ACTIVE)
  lastBooking DateTime    @default(now())
  bookings    Booking[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

enum GuestStatus {
  ACTIVE
  INACTIVE
}

model Booking {
  id            Int           @id @default(autoincrement())
  status        BookingStatus @default(CONFIRMED)
  arrivalDate   DateTime
  departureDate DateTime
  room          Room          @relation(fields: [roomId], references: [id])
  roomId        Int
  adults        Int
  children      Int
  guest         Guest         @relation(fields: [guestId], references: [id])
  guestId       Int
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

enum BookingStatus {
  CONFIRMED
  NOT_CONFIRMED
  PENDING
  CANCELLED
}

model GeneralSettings {
  id          Int      @id @default(autoincrement())
  hotelName   String
  country     String
  email       String
  phoneNumber String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model AboutInfo {
  id           Int           @id @default(autoincrement())
  title        String
  description  String
  aboutDetails AboutDetail[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model AboutDetail {
  id          Int        @id @default(autoincrement())
  title       String
  description String
  AboutInfo   AboutInfo? @relation(fields: [aboutInfoId], references: [id])
  aboutInfoId Int?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model ProfileInfo {
  id          Int      @id @default(autoincrement())
  name        String
  email       String
  phoneNumber String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
